apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: fetch-entity-information
spec:
  params:
    - name: ibmcloud-api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: continuous-delivery-context-secret
      description: name of the configmap containing the continuous delivery pipeline context secrets
      default: secure-properties
    - name: ibmcloud-apikey-secret-key
      description: field in the secret that contains the api key used to login to ibmcloud
      default: apikey
    - name: app-name
      description: name of the Code Engine application
    - name: resource-group
      description: target resource group (name or id) for the ibmcloud login operation
    - name: region
      description: target region for the ibmcloud login operation (if none is found it will default to the toolchain region)
    - name: code-engine-project
      description: name of the Code Engine project for deploying application
    - name: deployment-type
      description: Specifies the type of deployment. Valid values are 'application' and 'job'.
      default: "application"
    - name: task-image
      description: image used to execute this task
      default: "icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.11"
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"
  results:
    - name: image-repository
      description: image repository
    - name: image-tag
      description: image tag
  steps:
    - name: fetch-entity-information
      image: $(params.task-image)
      env:
        - name: IBMCLOUD_API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: $(params.ibmcloud-apikey-secret-key)
      script: |
        #!/bin/bash
        set -e -o pipefail

        if [ $(params.pipeline-debug) == 1 ]; then
            env
            pwd
            ls -l
            echo "=== cat /artifacts/_toolchain.json ==="
            cat /artifacts/_toolchain.json
            echo ""
            echo "======================================"
            trap env EXIT
            set -x
        fi

        # SETUP BEGIN
        ibmcloud config --check-version false
        #
        # Targetting the region and resource group
        if [ "$(params.region)" ]; then
          # if cluster region is in the 'ibm:yp:<region>' just keep the region part
          IBM_CLOUD_REGION=$(echo "$(params.region)" | awk -F ':' '{print $NF;}')
        else
          IBM_CLOUD_REGION=$(jq -r '.region_id' /artifacts/_toolchain.json | awk -F: '{print $3}')
        fi
        ibmcloud login -a $(params.ibmcloud-api) -r $IBM_CLOUD_REGION --apikey $IBMCLOUD_API_KEY
        ibmcloud target -g "$(params.resource-group)"

        #
        # Make sure that the latest version of Code Engine CLI is installed
        echo "Install the Code Engine plugin"      
        if ! ibmcloud plugin show code-engine >/dev/null 2>&1; then
            ibmcloud plugin install code-engine
        else
            ibmcloud plugin update code-engine --force
        fi

        ibmcloud ce project select --name "$(params.code-engine-project)"

        ibmcloud ce $(params.deployment-type) get --name "$(params.app-name)" --output json > output.json

        IMAGE=$(jq -r '.spec.template.spec.containers[0].image' output.json)

        # Record task results
        echo -n "$(echo $IMAGE |  awk -F: '{print $1}')" >$(results.image-repository.path)
        echo -n "$(echo $IMAGE |  awk -F: '{print $2}')" >$(results.image-tag.path)
